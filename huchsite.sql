-- MySQL dump 10.13  Distrib 5.6.36, for Linux (x86_64)
--
-- Host: localhost    Database: huchsite
-- ------------------------------------------------------
-- Server version	5.6.36

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `detail`
--

DROP TABLE IF EXISTS `detail`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `detail` (
  `id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `data` text,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `detail`
--

LOCK TABLES `detail` WRITE;
/*!40000 ALTER TABLE `detail` DISABLE KEYS */;
/*!40000 ALTER TABLE `detail` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `home`
--

DROP TABLE IF EXISTS `home`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `home` (
  `id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `title` varchar(255) NOT NULL DEFAULT '""',
  `creat_time` varchar(22) DEFAULT NULL,
  `reading` int(20) DEFAULT NULL,
  `tag` varchar(255) DEFAULT NULL,
  `keywords` varchar(255) DEFAULT NULL,
  `data` text,
  `desc` varchar(255) DEFAULT NULL,
  `imgpath` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=14 DEFAULT CHARSET=utf8mb4;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `home`
--

LOCK TABLES `home` WRITE;
/*!40000 ALTER TABLE `home` DISABLE KEYS */;
INSERT INTO `home` VALUES (3,'技术大牛是怎样炼成的！','1493124288617',NULL,'技术,大牛',NULL,'<p>拿破仑说：<u>不想当将军的士兵，不是好士兵</u>。<br><br>无论你在做开发、测试、运维，你都是一个技术人员，而我相信，每个技术人员的心中，都有一个成为技术大牛的目标，这个目标鞭策着每一位有梦想的人，去努力和改进自己。<br>&nbsp; &nbsp;<br><br><br>梦想总是在现实面前有过一度的彷徨，因为你会发现，真正的工作和心中的理想状态天壤之别，不是一码事。当你面对的是，天天加班写业务代码，每天都有执行不完的测试，扛机器接网线敲shell命令，你也许会怀疑，这是我想要的人生吗？<br><br>接下来，就让我们带着疑惑，去寻找答案！<br><br>三大误区<br><br>误区一：拜团队技术大牛为师，给你开小灶<br><br><br><br>首先，不可否认，大牛的确有能力将你锻炼培养成另一位大牛，但是，无论是单独给你开小灶，还是培训整个团队，时间成本消耗过大，因此，一般没有大牛愿意这样做。<br><br>其次，很多人都认为不懂就问是个好习惯，但是你忽略了很多问题大牛是不屑回答的，比如像“jvm的-Xmn参数如何配置”这种上网能找到答案的问题，只会浪费他人以及自己的时间。<br><br>最后，大牛是个极具小众的群体，因此，直接请教和辅导的机会非常少，即使有幸参加过几次真正大牛的培训，也不太可能让你嫣然一变，成为技术大牛的。<br><br>总而言之一句话，以自己为主，系统且有针对性的进行学习；然后再以请教学习为辅提升自己。<br><br>误区二：不断重复，停滞不前<br><br>首先，要认清一个事实，写不好业务代码和只把业务代码写好的程序员，在技术大牛的世界里，没有什么本质的不同。如果光是沉浸在一个基础技术里积累学习，那么毫无疑问，这是你的惯性和惰性在束缚着你前进，打破它，不断向更大的挑战迈进，最终成为他人眼中的大牛。<br><br>误区三：大环境的不公与碎片化时间<br><br><br><br>首先，大多数人都在抱怨中国的环境对于自己可能性的扼杀，并认为很多本来能成为大牛的人才被现实埋没，不可否认，这个理由具有一定的客观性，因为环境的确可以改变一类人的发展和命运。但是，如果我们转过身来自问，是否自己真的已经倾尽全力？我相信，总是存在一些人，借着社会不公的理由，给予自己偷懒的借口；毕竟，大牛还是会有的，万一就是你呢？<br><br>其次，如果你抱怨现如今社会的碎片化时间，不能有整段时间提供自己深入学习，那么，是否先改变自己的一个观念，那就是碎片化时间也可以深入学习。而未来，利用碎片化时间学习将可能成为一种趋势。<br><br>正确的做法<br><br>1、尽量多的尝试<br><br>当你每次都做得更多，随着时间的发展，将会是这样，产品讨论需求找你、测试有问题也找你、老大对外支撑也找你，于是，你就成了这个系统的“专家”了。要想有机会，那就得与众不同，努力做到更多。<br><br>怎么做得更多呢？可以从以下几个方面着手：<br><br>1）熟悉不止你负责的更多业务，熟悉不止你写的更多代码。<br>好处：<br><br>需求分析的时候更加准确，能够在需求阶段就识别风险、影响、难点<br>问题处理的时候更加快速，因为相关的业务和代码都熟悉，能够快速地判断问题可能的原因并进行排查处理<br>方案设计的时候考虑更加周全，由于有对全局业务的理解，能够设计出更好的方案<br><br>2）熟悉端到端<br><br>比如说你负责web后台开发，但实际上用户发起一个http请求，要经过很多中间步骤才到你的服务器（例如浏览器缓存、DNS、nginx等），服务器一般又会经过很多处理才到你写的那部分代码（路由、权限等）这整个流程中的很多系统或者步骤，绝大部分人是不可能去参与写代码的，但掌握了这些知识对你的综合水平有很大作用，例如方案设计、线上故障处理这些更加有含金量的技术工作都需要综合技术水平。<br><br>3）自学<br><br>一般在比较成熟的团队，由于框架或者组件已经进行了大量的封装，写业务代码所用到的技术确实也比较少，但我们要明白“唯一不变的只有变化”，框架有 可能要改进，组件可能要替换，或者你换了一家公司，新公司既没有组件也没有框架，要你从头开始来做。这些都是机会，也是挑战，而机会和挑战只会分配给有准备的人。<br><br>以java为例，大部分业务代码就是if-else加个数据库操作，但我们完全可以自己学些更多java的知识，例如垃圾回收，调优，网络编程等，这些可能暂时没用，但真要用的时候，不是google一下就可以了，这个时候谁已经掌握了相关知识和技能，机会就是谁的。<br><br>2、尽量做到更好<br><br>世界上没有完美的东西，你负责的系统和业务，总有不合理和可以改进的地方，识别这些“不合理”和“可改进”的地方，并且给出解决方案，然后向主管提出，一次不行两次，多提几次，机会，就是自己去争取和把握。<br><br>例如：<br>重复代码太多，是否可以引入设计模式？<br>系统性能一般，可否进行优化？<br>目前是单机，如果做成双机是否更好？<br>版本开发质量不高，是否引入高效的单元测试和集成测试方案？<br>目前的系统太庞大，是否可以通过重构和解耦改为3个系统？<br>阿里中间件有一些系统感觉我们也可以用，是否可以引入 ？<br><br>3、尽量动手实践<br><br>光看不用效果差<br><br>例如：<br><br>学习了jvm的垃圾回收，但是线上比较少出现FGC导致的卡顿问题，就算出现了，恢复业务也是第一位的，不太可能线上出现问题然后让每个同学都去练一下手，那怎么去实践这些jvm的知识和技能呢？<br><br>Netty我也看了，也了解了Reactor的原理，但是我不可能参与Netty开发，怎么去让自己真正掌握Reactor异步模式呢？<br><br>看了《高性能MySQL》，但是线上的数据库都是DBA管理的，测试环境的数据库感觉又是随便配置的，我怎么去验证这些技术呢？<br><br>框架封装了DAL层，数据库的访问我们都不需要操心，我们怎么去了解分库分表实现？<br><br>怎么办？<br><br>1）系统化的学习<br><br>这个是第一阶段，看书、google、看视频、看别人的博客都可以，但要注意一点是“系统化”，特别是一些基础性的东西，例如JVM原理、Java 编程、网络编程，HTTP协议等等，这些基础技术不能只通过google或者博客学习，一般做法是先完整地看完一本书，有了全面的了解，然后再通过google、视频、博客去有针对性地查找一些有疑问的地方，或者一些技巧。<br><br>2）自己动手丰衣足食<br><br>这个步骤就是解答上文提到的疑惑，也就是自己去尝试搭建一些模拟环境，自己写一些测试程序。例如：<br><br>Jvm垃圾回收：可以自己写一个简单的测试程序，分配内存不释放，然后调整各种jvm启动参数，再运行的过程中使用jstack、jstat等命令查看jvm的堆内存分布和垃圾回收情况。这样的程序写起来很简单，简单一点的就几行，复杂一点的也就几十行。<br><br>Reactor原理：自己真正去尝试写一个Reactor模式的Demo，不要以为这个很难，最简单的Reactor模式代码量（包括注释）不超过200行（可以参考Doug Lee的PPT）。自己写完后，再去看看netty怎么做，一对比理解就更加深刻了。<br><br>MySQL：既然有线上的配置可以参考，那可以直接让DBA将线上配置发给我们（注意去掉敏感信息），直接学习；然后自己搭建一个MySQL环境，用线上的配置启动；要知道很多同学用了很多年MySQL，但是连个简单的MySQL环境都搭不起来。<br><br>框架封装了DAL层：可以自己用JDBC尝试去写一个分库分表的简单实现，然后与框架的实现进行对比，看看差异在哪里。<br><br>用浏览器的工具查看HTTP缓存实现，看看不同种类的网站，不同类型的资源，具体是如何控制缓存的；也可以自己用Python写一个简单的HTTP服务器，模拟返回各种HTTP Headers来观察浏览器的反应。<br><br>3）交流分享，发现自己的不足之处。<br><br>与人交流分享，既需要我们将一个知识点进行系统化的梳理，并且考虑各种细节，这会促使我们进一步思考和学习。同时，听的人可以有不同的理解，或者有新的补充，这就令知识技能体系变得更加完善。<br><br>后记<br><br>无论结果怎样，当我们谈论过程的艰难与乐趣之时，是否可以不去计较自己是否付出太多？因为一个真正热爱技术的人，只会勇往直前，不忘初衷，坚持到底！<br></p><p><br></p>','拿破仑说：不想当将军的士兵，不是好士兵。\n\n无论你在做开发、测试、运维，你都是一个技术人员，而我相信，每个技术人员的心中，都有一个成为技术大牛的目标，这个目标鞭策着每一位有梦想的人，去努力和改进自己。','http://huchsite.oss-cn-shanghai.aliyuncs.com/7bc1bd98e29c781a6d53111b39418092.jpg'),(6,'小程序中解析富文本编辑器','1493259113035',NULL,'小程序,编辑器,html',NULL,'<p>&nbsp; &nbsp; 最近在公司边做活动，，边在做自己的网站，，以前有一个自己的网站，感觉有点难看，，那时刚开始明白服务器与前端之间的关系，所以就迫不及待的做了一个，没有数据库，一切数据都是存在服务器上的json文件，，不过这个网站虽然丑但是还是让我学到很多东西，，有机会要回忆，记录在这里。</p><p>&nbsp; &nbsp; 这个网站，架起了数据库，一切数据都是跑在数据库里，所以小程序也弄了起来，，但是又一点怎样将一个富文本编辑器，在小程序中渲染，，然后我响了很多方案，但是最后在网上找到了一个人写的编译器还不错。<br></p><p><br></p><p><a href=\"https://github.com/icindy/wxParse\" target=\"_blank\">https://github.com/icindy/wxParse</a></p><p>使用在里面</p><p><br></p>','在网站中使用的f富文本编辑器，如何在小程序中解析出来，然后在小程序中使用','https://huchsite.oss-cn-shanghai.aliyuncs.com/woman-working-on-laptop_4460x4460.jpg'),(9,'meta标签的使用','1493273910998',NULL,'meta,html',NULL,'<p>&nbsp; &nbsp;&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&lt;!--&nbsp;声明文档使用的字符编码&nbsp;--&gt;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&lt;meta&nbsp;charset=\'utf-8\'&gt;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&lt;!--&nbsp;优先使用&nbsp;IE&nbsp;最新版本和&nbsp;Chrome&nbsp;--&gt;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&lt;meta&nbsp;http-equiv=\"X-UA-Compatible\"&nbsp;content=\"IE=edge,chrome=1\"/&gt;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&lt;!--&nbsp;页面描述&nbsp;--&gt;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&lt;meta&nbsp;name=\"description\"&nbsp;content=\"不超过150个字符\"/&gt;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&lt;!--&nbsp;页面关键词&nbsp;--&gt;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&lt;meta&nbsp;name=\"keywords\"&nbsp;content=\"\"/&gt;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&lt;!--&nbsp;网页作者&nbsp;--&gt;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&lt;meta&nbsp;name=\"author\"&nbsp;content=\"name,&nbsp;email@gmail.com\"/&gt;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&lt;!--&nbsp;搜索引擎抓取&nbsp;--&gt;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&lt;meta&nbsp;name=\"robots\"&nbsp;content=\"index,follow\"/&gt;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&lt;!--&nbsp;为移动设备添加&nbsp;viewport&nbsp;--&gt;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&lt;meta&nbsp;name=\"viewport\"&nbsp;content=\"initial-scale=1,&nbsp;maximum-scale=3,&nbsp;minimum-scale=1,&nbsp;user-scalable=no\"&gt;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&lt;!--&nbsp;`width=device-width`&nbsp;会导致&nbsp;iPhone&nbsp;5&nbsp;添加到主屏后以&nbsp;WebApp&nbsp;全屏模式打开页面时出现黑边&nbsp;http://bigc.at/ios-webapp-viewport-meta.orz&nbsp;--&gt;</p><p>&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;-&lt;!--&nbsp;iOS&nbsp;设备&nbsp;begin&nbsp;--&gt;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&lt;meta&nbsp;name=\"apple-mobile-web-app-title\"&nbsp;content=\"标题\"&gt;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&lt;!--&nbsp;添加到主屏后的标题（iOS&nbsp;6&nbsp;新增）&nbsp;--&gt;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&lt;meta&nbsp;name=\"apple-mobile-web-app-capable\"&nbsp;content=\"yes\"/&gt;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&lt;!--&nbsp;是否启用&nbsp;WebApp&nbsp;全屏模式，删除苹果默认的工具栏和菜单栏&nbsp;--&gt;</p><p>&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&lt;meta&nbsp;name=\"apple-itunes-app\"&nbsp;content=\"app-id=myAppStoreID,&nbsp;affiliate-data=myAffiliateData,&nbsp;app-argument=myURL\"&gt;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&lt;!--&nbsp;添加智能&nbsp;App&nbsp;广告条&nbsp;Smart&nbsp;App&nbsp;Banner（iOS&nbsp;6+&nbsp;Safari）&nbsp;--&gt;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&lt;meta&nbsp;name=\"apple-mobile-web-app-status-bar-style\"&nbsp;content=\"black\"/&gt;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&lt;!--&nbsp;设置苹果工具栏颜色&nbsp;--&gt;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&lt;meta&nbsp;name=\"format-detection\"&nbsp;content=\"telphone=no,&nbsp;email=no\"/&gt;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&lt;!--&nbsp;忽略页面中的数字识别为电话，忽略email识别&nbsp;--&gt;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&lt;!--&nbsp;启用360浏览器的极速模式(webkit)&nbsp;--&gt;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&lt;meta&nbsp;name=\"renderer\"&nbsp;content=\"webkit\"&gt;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&lt;!--&nbsp;避免IE使用兼容模式&nbsp;--&gt;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&lt;meta&nbsp;http-equiv=\"X-UA-Compatible\"&nbsp;content=\"IE=edge\"&gt;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&lt;!--&nbsp;不让百度转码&nbsp;--&gt;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&lt;meta&nbsp;http-equiv=\"Cache-Control\"&nbsp;content=\"no-siteapp\"&nbsp;/&gt;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&lt;!--&nbsp;针对手持设备优化，主要是针对一些老的不识别viewport的浏览器，比如黑莓&nbsp;--&gt;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&lt;meta&nbsp;name=\"HandheldFriendly\"&nbsp;content=\"true\"&gt;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&lt;!--&nbsp;微软的老式浏览器&nbsp;--&gt;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&lt;meta&nbsp;name=\"MobileOptimized\"&nbsp;content=\"320\"&gt;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&lt;!--&nbsp;uc强制竖屏&nbsp;--&gt;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&lt;meta&nbsp;name=\"screen-orientation\"&nbsp;content=\"portrait\"&gt;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&lt;!--&nbsp;QQ强制竖屏&nbsp;--&gt;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&lt;meta&nbsp;name=\"x5-orientation\"&nbsp;content=\"portrait\"&gt;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&lt;!--&nbsp;UC强制全屏&nbsp;--&gt;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&lt;meta&nbsp;name=\"full-screen\"&nbsp;content=\"yes\"&gt;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&lt;!--&nbsp;QQ强制全屏&nbsp;--&gt;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&lt;meta&nbsp;name=\"x5-fullscreen\"&nbsp;content=\"true\"&gt;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&lt;!--&nbsp;UC应用模式&nbsp;--&gt;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&lt;meta&nbsp;name=\"browsermode\"&nbsp;content=\"application\"&gt;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&lt;!--&nbsp;QQ应用模式&nbsp;--&gt;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&lt;meta&nbsp;name=\"x5-page-mode\"&nbsp;content=\"app\"&gt;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&lt;!--&nbsp;windows&nbsp;phone&nbsp;点击无高光&nbsp;--&gt;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&lt;meta&nbsp;name=\"msapplication-tap-highlight\"&nbsp;content=\"no\"&gt;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&lt;!--&nbsp;iOS&nbsp;图标&nbsp;begin&nbsp;--&gt;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&lt;link&nbsp;rel=\"apple-touch-icon-precomposed\"&nbsp;href=\"/apple-touch-icon-57x57-precomposed.png\"/&gt;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&lt;!--&nbsp;iPhone&nbsp;和&nbsp;iTouch，默认&nbsp;57x57&nbsp;像素，必须有&nbsp;--&gt;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&lt;link&nbsp;rel=\"apple-touch-icon-precomposed\"&nbsp;sizes=\"114x114\"&nbsp;href=\"/apple-touch-icon-114x114-precomposed.png\"/&gt;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&lt;!--&nbsp;Retina&nbsp;iPhone&nbsp;和&nbsp;Retina&nbsp;iTouch，114x114&nbsp;像素，可以没有，但推荐有&nbsp;--&gt;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&lt;link&nbsp;rel=\"apple-touch-icon-precomposed\"&nbsp;sizes=\"144x144\"&nbsp;href=\"/apple-touch-icon-144x144-precomposed.png\"/&gt;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&lt;!--&nbsp;Retina&nbsp;iPad，144x144&nbsp;像素，可以没有，但推荐有&nbsp;--&gt;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&lt;!--&nbsp;iOS&nbsp;图标&nbsp;end&nbsp;--&gt;</p><p>&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&lt;!--&nbsp;iOS&nbsp;启动画面&nbsp;begin&nbsp;--&gt;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&lt;link&nbsp;rel=\"apple-touch-startup-image\"&nbsp;sizes=\"768x1004\"&nbsp;href=\"/splash-screen-768x1004.png\"/&gt;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&lt;!--&nbsp;iPad&nbsp;竖屏&nbsp;768&nbsp;x&nbsp;1004（标准分辨率）&nbsp;--&gt;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&lt;link&nbsp;rel=\"apple-touch-startup-image\"&nbsp;sizes=\"1536x2008\"&nbsp;href=\"/splash-screen-1536x2008.png\"/&gt;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&lt;!--&nbsp;iPad&nbsp;竖屏&nbsp;1536x2008（Retina）&nbsp;--&gt;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&lt;link&nbsp;rel=\"apple-touch-startup-image\"&nbsp;sizes=\"1024x748\"&nbsp;href=\"/Default-Portrait-1024x748.png\"/&gt;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&lt;!--&nbsp;iPad&nbsp;横屏&nbsp;1024x748（标准分辨率）&nbsp;--&gt;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&lt;link&nbsp;rel=\"apple-touch-startup-image\"&nbsp;sizes=\"2048x1496\"&nbsp;href=\"/splash-screen-2048x1496.png\"/&gt;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&lt;!--&nbsp;iPad&nbsp;横屏&nbsp;2048x1496（Retina）&nbsp;--&gt;</p><p>&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&lt;link&nbsp;rel=\"apple-touch-startup-image\"&nbsp;href=\"/splash-screen-320x480.png\"/&gt;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&lt;!--&nbsp;iPhone/iPod&nbsp;Touch&nbsp;竖屏&nbsp;320x480&nbsp;(标准分辨率)&nbsp;--&gt;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&lt;link&nbsp;rel=\"apple-touch-startup-image\"&nbsp;sizes=\"640x960\"&nbsp;href=\"/splash-screen-640x960.png\"/&gt;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&lt;!--&nbsp;iPhone/iPod&nbsp;Touch&nbsp;竖屏&nbsp;640x960&nbsp;(Retina)&nbsp;--&gt;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&lt;link&nbsp;rel=\"apple-touch-startup-image\"&nbsp;sizes=\"640x1136\"&nbsp;href=\"/splash-screen-640x1136.png\"/&gt;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&lt;!--&nbsp;iPhone&nbsp;5/iPod&nbsp;Touch&nbsp;5&nbsp;竖屏&nbsp;640x1136&nbsp;(Retina)&nbsp;--&gt;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&lt;!--&nbsp;iOS&nbsp;启动画面&nbsp;end&nbsp;--&gt;</p><p>&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&lt;!--&nbsp;iOS&nbsp;设备&nbsp;end&nbsp;--&gt;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&lt;meta&nbsp;name=\"msapplication-TileColor\"&nbsp;content=\"#000\"/&gt;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&lt;!--&nbsp;Windows&nbsp;8&nbsp;磁贴颜色&nbsp;--&gt;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&lt;meta&nbsp;name=\"msapplication-TileImage\"&nbsp;content=\"icon.png\"/&gt;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&lt;!--&nbsp;Windows&nbsp;8&nbsp;磁贴图标&nbsp;--&gt;</p><p>&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&lt;link&nbsp;rel=\"alternate\"&nbsp;type=\"application/rss+xml\"&nbsp;title=\"RSS\"&nbsp;href=\"/rss.xml\"/&gt;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&lt;!--&nbsp;添加&nbsp;RSS&nbsp;订阅&nbsp;--&gt;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&lt;link&nbsp;rel=\"shortcut&nbsp;icon\"&nbsp;type=\"image/ico\"&nbsp;href=\"/favicon.ico\"/&gt;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&lt;!--&nbsp;添加&nbsp;favicon&nbsp;icon&nbsp;--&gt;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&lt;!--&nbsp;sns&nbsp;社交标签&nbsp;begin&nbsp;--&gt;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&lt;!--&nbsp;参考微博API&nbsp;--&gt;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&lt;meta&nbsp;property=\"og:type\"&nbsp;content=\"类型\"&nbsp;/&gt;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&lt;meta&nbsp;property=\"og:url\"&nbsp;content=\"URL地址\"&nbsp;/&gt;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&lt;meta&nbsp;property=\"og:title\"&nbsp;content=\"标题\"&nbsp;/&gt;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&lt;meta&nbsp;property=\"og:image\"&nbsp;content=\"图片\"&nbsp;/&gt;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&lt;meta&nbsp;property=\"og:description\"&nbsp;content=\"描述\"&nbsp;/&gt;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&lt;!--&nbsp;sns&nbsp;社交标签&nbsp;end&nbsp;--&gt;</p><p>&nbsp;原文链接：<a href=\"http://caibaojian.com/mobile-meta.html\" target=\"_blank\">http://caibaojian.com/mobile-meta.html</a></p><p><br></p>','网页中总是忽略meta的用法，在网上找了一波，记录下来','https://huchsite.oss-cn-shanghai.aliyuncs.com/tooopen_sy_152767175226.jpg'),(10,'js的深拷贝，栈，堆','1493274224199',NULL,'js,栈,堆',NULL,'<p>什么栈，什么是堆</p><p><br></p><p>1、栈（stack）和堆（heap）</p><p>　　stack为自动分配的内存空间，它由系统自动释放；而heap则是动态分配的内存，大小不定也不会自动释放。　　　　　　　</p><p>2、基本类型和引用类型</p><p>　　基本类型：存放在栈内存中的简单数据段，数据大小确定，内存空间大小可以分配。</p><p>　　5种基本数据类型有Undefined、Null、Boolean、Number&nbsp;和&nbsp;String，它们是直接按值存放的，所以可以直接访问。</p><p>　　引用类型：存放在堆内存中的对象，变量实际保存的是一个指针，这个指针指向另一个位置。每个空间大小不一样，要根据情况开进行特定的分配。</p><p>　　当我们需要访问引用类型（如对象，数组，函数等）的值时，首先从栈中获得该对象的地址指针，然后再从堆内存中取得所需的数据。</p><p><br></p><p>可以参考<a href=\"http://www.cnblogs.com/chengguanhui/p/4737413.html\" target=\"_blank\">http://www.cnblogs.com/chengguanhui/p/4737413.html</a></p><p><br></p><p><br></p>','在js中的深拷贝，对象引用，值引用','https://huchsite.oss-cn-shanghai.aliyuncs.com/t01fb93063307344204.jpg'),(11,'webpack详解','1493274884209',NULL,'js,webpack',NULL,'<p>##webapck&nbsp;详细实验，，放在这里以免忘掉##</p><p>详细教程：http://www.th7.cn/web/js/201507/109843.shtml</p><p>var&nbsp;commonsPlugin&nbsp;=&nbsp;new&nbsp;webpack.optimize.CommonsChunkPlugin(\'common.js\');&nbsp;提取公共部分</p><p>-文件入口</p><p>entry:&nbsp;&nbsp;文件的入口，这个值是一个对象，对象的key值，输出的文件名，后面的value值是文件的路径</p><p>-文件出口</p><p>output:&nbsp;{</p><p>	path&nbsp;&nbsp;：&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;文件的输出路径，输出的文件名</p><p>	filename：\"[name].js\"&nbsp;&nbsp;&nbsp;输出的文件名字，name的值是一个entry&nbsp;中的key值</p><p>}</p><p>-使用加载器</p><p>module:&nbsp;{</p><p>	loader:[]</p><p>}</p><p>-有时候我们希望某些模块走CDN并以\'script\'的形式挂载到页面上来加载，但又希望能在&nbsp;webpack&nbsp;的模块中使用上</p><p>externals:&nbsp;{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\'react\':&nbsp;\'window.React\',</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\'react/addons\':&nbsp;\'window.React\',</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\'jquery\':&nbsp;\'window.jQuery\',</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\'jQuery\':&nbsp;\'window.jQuery\',</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\'underscore\':&nbsp;\'window._\',</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//\'module_path/modal/Modal.jsx\':&nbsp;\'window.XD.Modal\',</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\'pubsub-js\':&nbsp;\'window.PubSub\'</p><p>&nbsp;&nbsp;&nbsp;&nbsp;},</p><p>-使用路径，，让路径看起来更装逼</p><p>resolve{</p><p>	alias：{</p><p>		\'base_path\':&nbsp;path.resolve(__dirname&nbsp;+&nbsp;\'/app/\'),要使用绝对路径，，</p><p>	}</p><p>	root：“”&nbsp;&nbsp;&nbsp;优先查找开始路径</p><p>	extensions:&nbsp;[\'\',&nbsp;\'.js\',&nbsp;\'.jsx\']&nbsp;&nbsp;&nbsp;后缀默认</p><p>}</p><p>-插件项</p><p>plugins&nbsp;：[];这是一个数组结构</p><p>-一些有用的插件</p><p>on-build-webpack&nbsp;&nbsp;在webpack中使用可以提取报错消息</p><p>&nbsp;new&nbsp;WebpackOnBuildPlugin(function(stats)&nbsp;{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;compilation&nbsp;=&nbsp;stats.compilation;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;errors&nbsp;=&nbsp;compilation.errors;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(errors.length&nbsp;&gt;&nbsp;0)&nbsp;{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;error&nbsp;=&nbsp;errors[0];</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pushNotification(error.name,;&nbsp;error.message,&nbsp;\'Glass\');</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else&nbsp;{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;message&nbsp;=&nbsp;\'takes&nbsp;\'&nbsp;+&nbsp;(stats.endTime&nbsp;-&nbsp;stats.startTime)&nbsp;+&nbsp;\'ms\';</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;warningNumber&nbsp;=&nbsp;compilation.warnings.length;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(warningNumber&nbsp;&gt;&nbsp;0)&nbsp;{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;message&nbsp;+=&nbsp;\',&nbsp;with&nbsp;\'&nbsp;+&nbsp;warningNumber&nbsp;+&nbsp;\'&nbsp;warning(s)\';</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pushNotification(\'webpack&nbsp;building&nbsp;done\',&nbsp;message);</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;})</p><p>webpack&nbsp;优化插件</p><p>[webpack使用优化](http://web.jobbole.com/84847/)</p><p>最小化&nbsp;：new&nbsp;webpack.optimize.OccurenceOrderPlugin()&nbsp;&nbsp;&nbsp;&nbsp;webpack就能够比对id的使用频率和分布来得出最短的id分配给使用频率高的模块&nbsp;</p><p>去重：new&nbsp;webpack.optimize.DedupePlugin()</p><p>压缩：webpack.optimize.UglifyJsPlugin</p><p>对于chunks的优化：new&nbsp;webpack.optimize.LimitChunkCountPlugin({maxChunks:&nbsp;15})&nbsp;&nbsp;&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;new&nbsp;webpack.optimize.MinChunkSizePlugin({minChunkSize:&nbsp;10000})</p><p>改变生产环境和线上环境：new&nbsp;webpack.DefinePlugin</p><p>单页：</p><p>&nbsp;&nbsp;Webpack&nbsp;是为单页应用量身定做的&nbsp;你可以把app拆成很多chunk，这些chunk由路由来加载。入口模块仅仅包含路由和一些库，没有别的内容。这么做在用户通过导航浏览表现很好，但是初始化页面加载的时候你需要2个网络请求：一个是请求路由，一个是加载当前内容。</p><p>&nbsp;&nbsp;如果你利用HTML5的HistoryAPI&nbsp;来让URL影响当前内容页的话。你的服务器可以知道那个内容页面将被客户端请求。为了节约请求数，服务端可以把要请求的内容模块放到响应头里面：以script标签的形式来添加，浏览器将并行的加载这俩请求。</p><p>多页共享代码：</p><p>&nbsp;&nbsp;当编译一个多页面的app时，你想要在页面之间共享一些代码。这在webpack看来很简单的：只需要和多个入口文件一起编译就好</p><p>&nbsp;&nbsp;&nbsp;&nbsp;new&nbsp;CommonsChunkPlugin(\"commons.chunk.js\")</p><p></p><p>HtmlWebpackPlugin：[链接](https://www.npmjs.com/package/html-webpack-plugin)</p><p><br></p>','在处理打包中处理webpack,增加webpack的详解，对webpack的优化，等一系列的问题','https://huchsite.oss-cn-shanghai.aliyuncs.com/stock-photo-170435791.jpg'),(13,'react+服务端渲染','1496282367565',NULL,'react,服务器',NULL,'<p>前几天阿里云发出了一个警告，，在代码app.js里面有一个阿里cdn上传的一个key值暴露在外面，，于是想了一系列的方法，，</p><p>首先把git上的lib文件夹删除，将但是要在服务器上加上这个代码，，</p><p>&nbsp; &nbsp; 以前在git上传过lib上的代码，所以在删除本地的文件夹在上传，但是git上并没有删除， 利用 git&nbsp;rm&nbsp;-r&nbsp;--cached&nbsp;lib &nbsp;删除git上的文件夹，但是git上删除后，，服务器上的也是被删除，，于是，想着将服务端的代码压缩，混淆，，然后在通过git上传，，（还有一个方法，利用<a href=\"https://coding.net\" target=\"_blank\">https://coding.net</a>）或者自己在服务器上搭建一个代码托管工具，，</p><p>1，将服务器上的代码压缩</p><p>&nbsp; &nbsp; &nbsp; 由于服务端的文件有好多，，所以打算利用webpack进行压缩<br></p><p>&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<span style=\"background-color: rgb(248, 248, 248); color: rgb(51, 51, 51); font-size: 0.8em;\">module.exports = [clientConfig,serverConfig]</span><br></p><pre style=\"max-width:100%;overflow-x:auto;\"><code class=\"javascript hljs\" codemark=\"1\">serverConfig = {\n    context: path.resolve(__dirname, <span class=\"hljs-string\">\'..\'</span>),\n    entry: {server: <span class=\"hljs-string\">\'./lib/app\'</span>},\n    output: {\n        path: path.resolve(__dirname, <span class=\"hljs-string\">\'../dist/server\'</span>),\n        filename: <span class=\"hljs-string\">\'app.js\'</span>,\n        chunkFilename: <span class=\"hljs-string\">\'chunk.[name].js\'</span>\n    },\n    target: <span class=\"hljs-string\">\'node\'</span>,\n    node: {\n        __filename: <span class=\"hljs-literal\">true</span>,\n        __dirname: <span class=\"hljs-literal\">true</span>\n    },\n    <span class=\"hljs-built_in\">module</span>: {\n        loaders: [{\n            test: <span class=\"hljs-regexp\">/\\.js$/</span>,\n            exclude: <span class=\"hljs-regexp\">/node_modules/</span>,\n            loader: <span class=\"hljs-string\">\'babel\'</span>,\n            query: {\n                presets: [<span class=\"hljs-string\">\'es2015\'</span>, <span class=\"hljs-string\">\'react\'</span>, <span class=\"hljs-string\">\'stage-0\'</span>],\n                plugins: [<span class=\"hljs-string\">\'add-module-exports\'</span>],\n                cacheDirectory: <span class=\"hljs-literal\">true</span>\n            }\n        }, {\n            test: <span class=\"hljs-regexp\">/\\.less$/</span>,\n            loaders: [\n                <span class=\"hljs-string\">\'css/locals?modules&amp;camelCase&amp;importLoaders=1&amp;localIdentName=[hash:base64:8]\'</span>,\n                <span class=\"hljs-string\">\'less\'</span>\n            ]\n        }, {\n            test: <span class=\"hljs-regexp\">/\\.(jpg|png|gif|webp)$/</span>,\n            loader: <span class=\"hljs-string\">\'url?limit=8000\'</span>\n        }, {\n            test: <span class=\"hljs-regexp\">/\\.json$/</span>,\n            loader: <span class=\"hljs-string\">\'json\'</span>\n        }]\n    },\n    externals: getExternals(),\n    resolve: {extensions: [<span class=\"hljs-string\">\'\'</span>, <span class=\"hljs-string\">\'.js\'</span>, <span class=\"hljs-string\">\'.json\'</span>, <span class=\"hljs-string\">\'.less\'</span>]},\n    plugins: [\n        <span class=\"hljs-keyword\">new</span> webpack.optimize.OccurrenceOrderPlugin(),\n        <span class=\"hljs-keyword\">new</span> webpack.optimize.DedupePlugin(),\n        <span class=\"hljs-keyword\">new</span> webpack.optimize.UglifyJsPlugin({\n            compress: {warnings: <span class=\"hljs-literal\">false</span>},\n            comments: <span class=\"hljs-literal\">false</span>\n        })\n    ]\n}</code></pre><p>由于懒，所已将前端代码的压缩的webpack复制了一份，不过还好，能正常的跑起来，代码压缩了起来但是跑的很欢，，哈哈哈</p><p>但是遇到一个问题，，就是有时会报错 于是需要在app。js上加上 &nbsp;import&nbsp;\"babel-polyfill\";</p><p><br></p><p>2.使用服务端渲染代码</p><p>服务端渲染，，思路，使用前端模板ejs模块，使用reactDom的renderToString的api渲染出来完整的代码，，</p><p><br></p><pre style=\"max-width:100%;overflow-x:auto;\"><code class=\"javascript hljs\" codemark=\"1\">import React from \'react\'\nimport {renderToString} from \'react-dom/server\'\nimport {match, RouterContext} from \'react-router\'\nimport routes from \'../client/routes\'\n\n\nasync function clientRoute(req,res,next) {\n    let _renderProps\n\n    match({routes, location: req.url}, (error, redirectLocation, renderProps) =&gt; {\n        _renderProps = renderProps\n    })\n\n\n\n\n    if (_renderProps) {\n        await res.render(\'index\', {\n            root: renderToString(\n                    &lt;RouterContext {..._renderProps}/&gt;\n            )\n            \n        })\n    } else {\n        await next()\n    }\n}\n\nexport default clientRoute</code></pre><p>但是又一点，，ejs要读取.html的文件，需要在app。js中加入</p><p><br></p><p><br></p><pre style=\"max-width:100%;overflow-x:auto;\"><code class=\"javascript hljs\" codemark=\"1\">app.set(<span class=\"hljs-string\">\'views\'</span>, path.resolve(__dirname, <span class=\"hljs-string\">\'../public\'</span>));\n\napp.engine(<span class=\"hljs-string\">\'html\'</span>, <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">\'ejs\'</span>).renderFile);\n\napp.set(<span class=\"hljs-string\">\"view engine\"</span>,<span class=\"hljs-string\">\"html\"</span>);</code></pre><p>到目前，算是完成，，使用爬虫 可以爬区到网站上的页面，，，</p>','压缩服务端代码，使用前端路由，和服务器渲染同时进行，有利于seo浏览器爬虫，，，','https://huchsite.oss-cn-shanghai.aliyuncs.com/woman-holding-coffee-mug_4460x4460.jpg');
/*!40000 ALTER TABLE `home` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `user`
--

DROP TABLE IF EXISTS `user`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `user` (
  `id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `nickName` varchar(2200) DEFAULT NULL,
  `city` varchar(110) DEFAULT NULL,
  `avatarUrl` varchar(1000) DEFAULT NULL,
  `gender` int(11) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8mb4;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `user`
--

LOCK TABLES `user` WRITE;
/*!40000 ALTER TABLE `user` DISABLE KEYS */;
INSERT INTO `user` VALUES (2,'煙花易涼  ','','http://wx.qlogo.cn/mmopen/vi_32/2Vx3Ds3BiblkBDf0x4TPnmDor9WCpvacJwYmKt9DwApSsItlOvbWiaibXicl7WCPs8E1YibCnAcicB0oicalY7BpGZnuA/0',0),(3,'巡山的小妖怪','Hangzhou','http://wx.qlogo.cn/mmopen/vi_32/Q3auHgzwzM47dd8RQGibcezBhyX2vMZwIj1lE2o61oT9GXibeU0tya2rDRxA158nwhBM4gHffwPAsp2nhP8lSU4Q/0',1);
/*!40000 ALTER TABLE `user` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2017-06-12 11:18:25
